{
  "_args": [
    [
      {
        "raw": "shot@1.3.5",
        "scope": null,
        "escapedName": "shot",
        "name": "shot",
        "rawSpec": "1.3.5",
        "spec": "1.3.5",
        "type": "version"
      },
      "/Users/Beth/bloc/weatherornot/node_modules/hapi"
    ]
  ],
  "_from": "shot@1.3.5",
  "_id": "shot@1.3.5",
  "_inCache": true,
  "_location": "/hapi/shot",
  "_npmUser": {
    "name": "hueniverse",
    "email": "eran@hueniverse.com"
  },
  "_npmVersion": "1.4.23",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shot@1.3.5",
    "scope": null,
    "escapedName": "shot",
    "name": "shot",
    "rawSpec": "1.3.5",
    "spec": "1.3.5",
    "type": "version"
  },
  "_requiredBy": [
    "/hapi"
  ],
  "_resolved": "https://registry.npmjs.org/shot/-/shot-1.3.5.tgz",
  "_shasum": "23c6c5221ec3368651f17879a8880ca141900a90",
  "_shrinkwrap": null,
  "_spec": "shot@1.3.5",
  "_where": "/Users/Beth/bloc/weatherornot/node_modules/hapi",
  "bugs": {
    "url": "https://github.com/hapijs/shot/issues"
  },
  "contributors": [
    {
      "name": "Van Nguyen",
      "email": "the.gol.effect@gmail.com"
    },
    {
      "name": "Eran Hammer",
      "email": "eran@hammer.io",
      "url": "http://hueniverse.com"
    },
    {
      "name": "Wyatt Preul",
      "email": "wpreul@gmail.com",
      "url": "http://jsgeek.com"
    }
  ],
  "dependencies": {},
  "description": "Injects a fake HTTP request/response into a node HTTP server",
  "devDependencies": {
    "lab": "4.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "23c6c5221ec3368651f17879a8880ca141900a90",
    "tarball": "https://registry.npmjs.org/shot/-/shot-1.3.5.tgz"
  },
  "engines": {
    "node": ">=0.10.30"
  },
  "gitHead": "0edac493633cb5ada99075c5d43f76d74e5a60f3",
  "homepage": "https://github.com/hapijs/shot#readme",
  "keywords": [
    "utilities",
    "http",
    "debug",
    "test"
  ],
  "licenses": [
    {
      "type": "BSD",
      "url": "http://github.com/hapijs/shot/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "hueniverse",
      "email": "eran@hueniverse.com"
    },
    {
      "name": "wyatt",
      "email": "wpreul@gmail.com"
    }
  ],
  "name": "shot",
  "optionalDependencies": {},
  "readme": "![shot Logo](https://raw.github.com/hapijs/shot/master/images/shot.png)\n\nInjects a fake HTTP request/response into a node HTTP server for simulating server logic, writing tests, or debugging. Does not use a socket\nconnection so can be run against an inactive server (server not in listen mode). This module is still experimental.\n\n[![Build Status](https://secure.travis-ci.org/hapijs/shot.png)](http://travis-ci.org/hapijs/shot)\n\nLead Maintainer: [Wyatt Preul](https://github.com/wpreul)\n\nFor example:\n\n```javascript\n// Load modules\n\nvar Http = require('http');\nvar Shot = require('shot');\n\n\n// Declare internals\n\nvar internals = {};\n\n\ninternals.main = function () {\n\n    var dispatch = function (req, res) {\n\n        var reply = 'Hello World';\n        res.writeHead(200, { 'Content-Type': 'text/plain', 'Content-Length': reply.length });\n        res.end(reply);\n    };\n\n    var server = Http.createServer(dispatch);\n\n    Shot.inject(dispatch, { method: 'get', url: '/' }, function (res) {\n\n        console.log(res.payload);\n    });\n};\n\n\ninternals.main();\n```\n\nNote how `server.listen` is never called.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/shot.git"
  },
  "scripts": {
    "test": "make test-cov"
  },
  "version": "1.3.5"
}
